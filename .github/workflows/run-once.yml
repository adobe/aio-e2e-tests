name: On Demand - run all e2e tests

on: workflow_dispatch

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node: [14]
        os: [ubuntu-latest]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm i --package-lock --package-lock-only
    - run: npm ci
    - name: run e2e tests
      env:
        JWT_PRIVATE_KEY: ${{ secrets.JWT_PRIVATE_KEY }}
        JWT_CLIENTID: ${{ secrets.JWT_CLIENTID }}
        JWT_TECH_ACC_ID: ${{ secrets.JWT_TECH_ACC_ID }}
        JWT_ORG_ID: ${{ secrets.JWT_ORG_ID }}
        JWT_CLIENT_SECRET: ${{ secrets.JWT_CLIENT_SECRET }}
        TARGET_TENANT: ${{ secrets.TARGET_TENANT }}
        CAMPAIGN_STANDARD_TENANT_ID: ${{ secrets.CAMPAIGN_STANDARD_TENANT_ID }}
        ANALYTICS_COMPANY: ${{ secrets.ANALYTICS_COMPANY }}
        ANALYTICS_RSID: ${{ secrets.ANALYTICS_RSID }}
        AUDIENCE_MANAGER_ID: ${{ secrets.AUDIENCE_MANAGER_ID }}
        EVENTS_ORG_ID: ${{ secrets.EVENTS_ORG_ID }}
        EVENTS_CONSUMER_ORG_ID: ${{ secrets.EVENTS_CONSUMER_ORG_ID }}
        EVENTS_WORKSPACE_ID: ${{ secrets.EVENTS_WORKSPACE_ID }}
        EVENTS_PROJECT_ID: ${{ secrets.EVENTS_PROJECT_ID }}
        EVENTS_INTEGRATION_ID: ${{ secrets.EVENTS_INTEGRATION_ID }}
        RUNTIME_NAMESPACE: ${{secrets.RUNTIME_NAMESPACE}}
        RUNTIME_AUTH: ${{secrets.RUNTIME_AUTH}}
      run: npm run all
    - name: Slack Notification
      if: ${{ failure() }}
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        SLACK_TITLE: 'Node version'
        SLACK_MESSAGE: ${{ matrix.node }}
        SLACK_COLOR: ${{ job.status == 'success' && 'good' || job.status == 'cancelled' && '#808080' || 'danger' }}