name: App smoke test (init, build and deploy)

on:
  workflow_dispatch:
  schedule:
    # run daily at midnight
    - cron: '15 0 * * *'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 1
      matrix:
        node: [14, 16]
        os: [ubuntu-latest]

    steps:
    - name: Setup CLI
      uses: actions/checkout@master
      with:
          repository: adobe/aio-cli-plugin-app
    - name: Update package.json with an npm pre-release version
      id: pre-release-version
      uses: adobe/update-prerelease-npm-version@v1.0.2
      with:
        pre-release-tag: 'pre'
        dependencies-to-update: '@adobe/aio-cli-lib-app-config,@adobe/aio-cli-lib-console,@adobe/aio-lib-core-config,@adobe/aio-lib-core-logging,@adobe/aio-lib-core-networking,@adobe/aio-lib-env,@adobe/aio-lib-ims,@adobe/aio-lib-runtime,@adobe/aio-lib-web,@adobe/generator-aio-app'
        dependencies-to-update-version-tag: 'next'
    - id: create
      name: create app with no extensions
      run: |
        npm i
        mkdir ffapp
        cd ffapp

        ../bin/run app:init -y --no-login --no-extensions > consoleoutput.txt
        grep "App initialization finished" consoleoutput.txt

        echo AIO_RUNTIME_AUTH=${{secrets.RUNTIME_AUTH}} > .env
        echo AIO_RUNTIME_NAMESPACE=${{secrets.RUNTIME_NAMESPACE}} >> .env

        ../bin/run app:deploy >> consoleoutput.txt
        grep "Your deployed actions:" consoleoutput.txt
        grep "api/v1/web/ffapp/generic" consoleoutput.txt
        grep "/api/v1/web/ffapp/publish-events" consoleoutput.txt
        grep ".adobeio-static.net/index.html" consoleoutput.txt
        grep "Successful deployment" consoleoutput.txt
    - id: createext
      name: create app with extension
      run: |
        rm -rf ffapp
        mkdir ffapp
        cd ffapp

        ../bin/run app:init -y --no-login --extension dx/excshell/1 > consoleoutput.txt
        grep "App initialization finished" consoleoutput.txt

        echo AIO_RUNTIME_AUTH=${{secrets.RUNTIME_AUTH}} > .env
        echo AIO_RUNTIME_NAMESPACE=${{secrets.RUNTIME_NAMESPACE}} >> .env

        ../bin/run app:deploy --no-publish >> consoleoutput.txt
        grep "Your deployed actions:" consoleoutput.txt
        grep "api/v1/web/dx-excshell-1/generic" consoleoutput.txt
        grep ".adobeio-static.net/index.html" consoleoutput.txt
        grep "Successful deployment" consoleoutput.txt

    - name: Setup Asset Compute
      uses: actions/checkout@master
      with:
          repository: adobe/asset-compute-integration-tests
    - id: create-asset-compute
      name: asset compute smoke integration test
      run: |
        npm i
        ./node_modules/mocha/bin/mocha test/index.test.js > consoleoutput.txt

        grep "App initialization finished!" consoleoutput.txt
        grep "Successful deployment" consoleoutput.txt
        grep "Running tests in test/asset-compute/worker" consoleoutput.txt
        grep "All tests were successful." consoleoutput.txt

    - id: output
      name: Write the output to console for debugging
      if: ${{ failure() }}
      run: |
        cd ffapp
        cat consoleoutput.txt

    - id: slacknotification
      name: Slack Notification
      if: ${{ failure() }}
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        SLACK_TITLE: 'Node version'
        SLACK_MESSAGE: ${{ matrix.node }}
        SLACK_COLOR: ${{ job.status == 'success' && 'good' || job.status == 'cancelled' && '#808080' || 'danger' }}
